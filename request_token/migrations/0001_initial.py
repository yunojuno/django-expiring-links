# Generated by Django 2.0.2 on 2018-02-22 19:53

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RequestToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login_mode', models.CharField(choices=[('None', 'Do not authenticate'), ('Request', 'Authenticate a single request'), ('Session', 'Authenticate for the entire session')], default='None', help_text='How should the request be authenticated?', max_length=10)),
                ('scope', models.CharField(help_text='Label used to match request to view function in decorator.', max_length=100)),
                ('expiration_time', models.DateTimeField(blank=True, help_text='Token will expire at this time (raises ExpiredSignatureError).', null=True)),
                ('not_before_time', models.DateTimeField(blank=True, help_text='Token cannot be used before this time (raises ImmatureSignatureError).', null=True)),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, help_text='Custom data add to the token, but not encoded (must be fetched from DB).', null=True)),
                ('issued_at', models.DateTimeField(blank=True, help_text='Time the token was created (set in the initial save).', null=True)),
                ('max_uses', models.IntegerField(default=1, help_text='The maximum number of times the token can be used.')),
                ('used_to_date', models.IntegerField(default=0, help_text='Number of times the token has been used to date (raises MaxUseError).')),
                ('user', models.ForeignKey(blank=True, help_text='Intended recipient of the JWT (can be used by anyone if not set).', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='request_tokens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Token',
                'verbose_name_plural': 'Tokens',
            },
        ),
        migrations.CreateModel(
            name='RequestTokenErrorLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('error_type', models.CharField(help_text='The underlying type of error raised.', max_length=50)),
                ('error_message', models.CharField(help_text='The error message supplied.', max_length=200)),
            ],
            options={
                'verbose_name': 'Error',
                'verbose_name_plural': 'Errors',
            },
        ),
        migrations.CreateModel(
            name='RequestTokenLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_agent', models.TextField(blank=True, help_text='User-agent of client used to make the request.')),
                ('client_ip', models.GenericIPAddressField(blank=True, help_text='Client IP of device used to make the request.', null=True, unpack_ipv4=True)),
                ('status_code', models.IntegerField(blank=True, help_text='Response status code associated with this use of the token.', null=True)),
                ('timestamp', models.DateTimeField(blank=True, help_text='Time the request was logged.')),
                ('token', models.ForeignKey(help_text='The RequestToken that was used.', on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='request_token.RequestToken')),
                ('user', models.ForeignKey(blank=True, help_text='The user who made the request (None if anonymous).', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Log',
                'verbose_name_plural': 'Logs',
            },
        ),
        migrations.AddField(
            model_name='requesttokenerrorlog',
            name='log',
            field=models.OneToOneField(help_text='The token use against which the error occurred.', on_delete=django.db.models.deletion.CASCADE, related_name='error', to='request_token.RequestTokenLog'),
        ),
        migrations.AddField(
            model_name='requesttokenerrorlog',
            name='token',
            field=models.ForeignKey(help_text='The RequestToken that was used.', on_delete=django.db.models.deletion.CASCADE, related_name='errors', to='request_token.RequestToken'),
        ),
    ]
